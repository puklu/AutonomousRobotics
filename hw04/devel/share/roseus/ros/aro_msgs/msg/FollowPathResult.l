;; Auto-generated. Do not edit!


(when (boundp 'aro_msgs::FollowPathResult)
  (if (not (find-package "ARO_MSGS"))
    (make-package "ARO_MSGS"))
  (shadow 'FollowPathResult (find-package "ARO_MSGS")))
(unless (find-package "ARO_MSGS::FOLLOWPATHRESULT")
  (make-package "ARO_MSGS::FOLLOWPATHRESULT"))

(in-package "ROS")
;;//! \htmlinclude FollowPathResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass aro_msgs::FollowPathResult
  :super ros::object
  :slots (_finalPosition ))

(defmethod aro_msgs::FollowPathResult
  (:init
   (&key
    ((:finalPosition __finalPosition) (instance geometry_msgs::Pose2D :init))
    )
   (send-super :init)
   (setq _finalPosition __finalPosition)
   self)
  (:finalPosition
   (&rest __finalPosition)
   (if (keywordp (car __finalPosition))
       (send* _finalPosition __finalPosition)
     (progn
       (if __finalPosition (setq _finalPosition (car __finalPosition)))
       _finalPosition)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose2D _finalPosition
    (send _finalPosition :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose2D _finalPosition
       (send _finalPosition :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose2D _finalPosition
     (send _finalPosition :deserialize buf ptr-) (incf ptr- (send _finalPosition :serialization-length))
   ;;
   self)
  )

(setf (get aro_msgs::FollowPathResult :md5sum-) "9ed511beb5c491291b59853d2626b761")
(setf (get aro_msgs::FollowPathResult :datatype-) "aro_msgs/FollowPathResult")
(setf (get aro_msgs::FollowPathResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/Pose2D finalPosition

================================================================================
MSG: geometry_msgs/Pose2D
# Deprecated
# Please use the full 3D pose.

# In general our recommendation is to use a full 3D representation of everything and for 2D specific applications make the appropriate projections into the plane for their calculations but optimally will preserve the 3D information during processing.

# If we have parallel copies of 2D datatypes every UI and other pipeline will end up needing to have dual interfaces to plot everything. And you will end up with not being able to use 3D tools for 2D use cases even if they're completely valid, as you'd have to reimplement it with different inputs and outputs. It's not particularly hard to plot the 2D pose or compute the yaw error for the Pose message and there are already tools and libraries that can do this for you.


# This expresses a position and orientation on a 2D manifold.

float64 x
float64 y
float64 theta

")



(provide :aro_msgs/FollowPathResult "9ed511beb5c491291b59853d2626b761")


